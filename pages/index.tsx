import Head from 'next/head'
import { GetServerSideProps, NextPage } from 'next'
import { connect } from 'react-redux'
import { useState, useEffect, FormEvent } from 'react'
import { useAppDispatch, useAppSelector } from '@/store/hooks'
import { User, authUser, logoutUser, restoreUser } from '@/store/session'
import { RootState, wrapper } from '@/store/store'
// import Image from 'next/image'
// import styles from '@/styles/Home.module.css'

const Home: NextPage<RootState> = () => {
  const dispatch = useAppDispatch()
  const user: User | null = useAppSelector((state: RootState) => state.session.user)
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault()

    await dispatch(authUser({ email, password }))
  }

  useEffect(() => {
    if(!user) (async () => {await dispatch(restoreUser())})()

  }, [dispatch, user])

  return (
    <>
      <Head>
        <title>next</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      {
        user ? (
          <div>
            <button onClick={() => {dispatch(logoutUser())}}>Logout</button>
          </div>
        ) : (
          <div>
            <form onSubmit={handleSubmit}>
              <input
                type='email'
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
              <input
                type='password'
                value={password}
                onChange={e => setPassword(e.target.value)}
              />
              <button type='submit'>Submit</button>
            </form>
          </div>
        )
      }
    </>
  )
}

export const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(
  (store) =>
    async ({ req, res, ...etc }) => {
      const user = store.getState().session.user
      if(!user) {
        const a = await store.dispatch(restoreUser())
        console.log(a)
      }

      return {
        props: {}
      }
})

export default connect((state: RootState): RootState => state)(Home)
